{"version":3,"sources":["PlotComponent.js","Home.js","App.js","index.js"],"names":["PlotComponent","plotComponentFactory","Plotly","useStyles","makeStyles","theme","parkhausContainer","width","dividerContainer","marginTop","spacing","marginBottom","tableContainer","height","cmdButtons","diagramButtons","Home","classes","React","useState","diagramError","setDiagramError","diagramResult","setDiagramResult","cmdError","setCmdError","cmdResult","setCmdResult","getCmd","text","cmd","isDiagram","axios","get","then","response","data","catch","Grid","container","direction","justify","alignItems","className","item","dangerouslySetInnerHTML","__html","Divider","variant","Typography","color","map","btn","index","Button","onClick","rows","columns","field","headerName","root","margin","padding","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Container","Paper","elevation","ReactDOM","render","document","getElementById"],"mappings":"2UAKeA,EAFOC,IAAqBC,K,OCGrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,kBAAmB,CACfC,MAAO,QAEXC,iBAAkB,CACdC,UAAWJ,EAAMK,QAAQ,GACzBC,aAAcN,EAAMK,QAAQ,GAC5BH,MAAO,QAEXK,eAAgB,CACZC,OAAQ,QACRN,MAAO,YAITO,EAAa,CACf,CAAC,QAAS,SACV,CAAC,mBAAiB,gBAClB,CAAC,cAAY,kBACb,CAAC,sBAAuB,eAGtBC,EAAiB,CACnB,CAAC,UAAW,YACZ,CAAC,gBAAiB,yBAClB,CAAC,aAAc,sBACf,CAAC,cAAe,uBAChB,CAAC,4BAA0B,yBAgKhBC,EA7JF,WACT,IAAMC,EAAUd,IAiBhB,EAAwCe,IAAMC,UAAS,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CH,IAAMC,WAAhD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAAgCL,IAAMC,UAAS,GAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCP,IAAMC,SAAS,0BAAjD,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,SAACC,EAAMC,EAAKC,GACvBC,IAAMC,IAAN,qBAAwBH,IAAOI,MAAK,SAACC,GAC7BJ,GACAV,GAAgB,GAChBE,EAAiBY,EAASC,QAE1BX,GAAY,GACZE,EAAa,GAAD,OAAIE,EAAJ,aAAaM,EAASC,WAEvCC,OAAM,WACDN,GAGAV,GAAgB,GAChBE,EAAiB,CAAE,KAAQ,CAAC,CAAE,EAAK,CAAC,qBAAsB,qBAAsB,oBAAqB,qBAAsB,qBAAsB,oBAAqB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,qBAAsB,sBAAuB,EAAK,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,oBAAqB,oBAAqB,QAAS,oBAAqB,SAAU,qBAAsB,UAAW,UAAW,UAAW,qBAAsB,sBAAuB,KAAQ,OAAQ,KAAQ,4CAA8C,OAAU,CAAE,MAAS,CAAE,KAAQ,4CAA8C,MAAS,CAAE,MAAS,CAAE,KAAQ,0BAA6B,MAAS,CAAE,MAAS,CAAE,KAAQ,2BAEx1BE,GAAY,GACZE,EAAa,GAAD,OAAIE,EAAJ,mBAKxB,OACI,eAACS,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SAJf,UAMI,cAACJ,EAAA,EAAD,CACIK,UAAW1B,EAAQX,kBACnBsC,MAAI,EACJC,wBAAyB,CAAEC,OArDtB,2VAuDT,cAACR,EAAA,EAAD,CAAMK,UAAW1B,EAAQT,iBAAkBoC,MAAI,EAA/C,SACI,cAACG,EAAA,EAAD,CAASC,QAAQ,gBAErB,cAACV,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI,eAACN,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXhC,QAAS,EALb,UAOI,cAAC4B,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI,cAACK,EAAA,EAAD,CACIC,MAAO1B,EAAW,QAAU,UAC5BwB,QAAQ,KAFZ,SAIKtB,MAGT,cAACY,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI,cAACN,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXhC,QAAS,EALb,SAOKI,EAAWqC,KAAI,SAACC,EAAKC,GAClB,OACI,cAACf,EAAA,EAAD,CAAiCM,MAAI,EAArC,SACI,cAACU,EAAA,EAAD,CACIJ,MAAM,UACNF,QAAQ,YACRO,QAAS,kBAAM3B,EAAOwB,EAAI,GAAIA,EAAI,IAAI,IAH1C,SAIEA,EAAI,MALV,oBAAwBC,gBAahD,cAACf,EAAA,EAAD,CAAMK,UAAW1B,EAAQT,iBAAkBoC,MAAI,EAA/C,SACI,cAACG,EAAA,EAAD,CAASC,QAAQ,gBAErB,cAACV,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI,eAACN,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXhC,QAAS,EALb,UAOI,eAAC4B,EAAA,EAAD,CAAMM,MAAI,EAAV,UACKxB,GACG,cAAC6B,EAAA,EAAD,CACIC,MAAM,QACNF,QAAQ,KAFZ,SAIK1B,IAGT,cAAC,EAAD,CACIc,KAAMd,EAAcc,UAG5B,cAACE,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI,cAACN,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXhC,QAAS,EALb,SAOKK,EAAeoC,KAAI,SAACC,EAAKC,GACtB,OACI,cAACf,EAAA,EAAD,CAAqCM,MAAI,EAAzC,SACI,cAACU,EAAA,EAAD,CACIJ,MAAM,UACNF,QAAQ,YACRO,QAAS,kBAAM3B,EAAOwB,EAAI,GAAIA,EAAI,IAAI,IAH1C,SAIEA,EAAI,MALV,wBAA4BC,gBAapD,cAACf,EAAA,EAAD,CAAMK,UAAW1B,EAAQT,iBAAkBoC,MAAI,EAA/C,SACI,cAACG,EAAA,EAAD,CAASC,QAAQ,gBAErB,cAACV,EAAA,EAAD,CAAMK,UAAW1B,EAAQL,eAAgBgC,MAAI,EAA7C,SACI,cAAC,IAAD,CAAUY,KAvIT,GAuIqBC,QA3IlB,CACZ,CAAEC,MAAO,KAAMC,WAAY,KAAMpD,MAAO,cC7C1CJ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuD,KAAM,CACFC,OAAQxD,EAAMK,QAAQ,GACtBoD,QAASzD,EAAMK,QAAQ,QAiChBqD,EA7BH,WACR,IAAMC,EAAkBC,YAAc,gCAEhC5D,EAAQa,IAAMgD,SAChB,kBAAMC,YAAe,CACjBC,QAAS,CAELC,KAAM,aAGd,CAACL,IAGC/C,EAAUd,IAEhB,OACI,eAACmE,EAAA,EAAD,CAAejE,MAAOA,EAAtB,UACI,cAACkE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAO9B,UAAW1B,EAAQ2C,KAAMc,UAAW,EAA3C,SACI,cAACF,EAAA,EAAD,UACI,cAAC,EAAD,cC5BxBG,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d47ea57d.chunk.js","sourcesContent":["import plotComponentFactory from \"react-plotly.js/factory\";\r\nimport Plotly from \"plotly.js-dist\";\r\n\r\nconst PlotComponent = plotComponentFactory(Plotly);\r\n\r\nexport default PlotComponent;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport PlotComponent from \"./PlotComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    parkhausContainer: {\r\n        width: \"100%\"\r\n    },\r\n    dividerContainer: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    tableContainer: {\r\n        height: \"400px\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst cmdButtons = [\r\n    [\"Summe\", \"Summe\"],\r\n    [\"Ø Ticketpreis\", \"Durchschnitt\"],\r\n    [\"Verkäufe\", \"habenVerlassen\"],\r\n    [\"Aktuelle Auslastung\", \"Auslastung\"]\r\n];\r\n\r\nconst diagramButtons = [\r\n    [\"Tickets\", \"Diagramm\"],\r\n    [\"Fahrzeugtypen\", \"FahrzeugtypenDiagramm\"],\r\n    [\"Auslastung\", \"AuslastungDiagramm\"],\r\n    [\"Kundentypen\", \"KundentypenDiagramm\"],\r\n    [\"Ø Parkdauer Abonnenten\", \"AboParkdauerDiagramm\"]\r\n];\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const parkhaus = \"<ccm-parkhaus-10-2-3 \" +\r\n        \"key='{\\\"name\\\":\\\"CarHome\\\",\" +\r\n        \"\\\"server_url\\\":\\\"./api/\\\",\" +\r\n        \"\\\"extra_charts\\\":[\\\"Diagramm\\\", \\\"FahrzeugtypenDiagramm\\\", \\\"AuslastungDiagramm\\\", \\\"KundentypenDiagramm\\\", \\\"AboParkdauerDiagramm\\\"],\\\"client_categories\\\":[\\\"Standard\\\",\\\"Abo-1\\\",\\\"Abo-2\\\"],\" +\r\n        \"\\\"vehicle_types\\\":[\\\"Limousine\\\", \\\"Kombi\\\", \\\"SUV\\\"],\" +\r\n        \"\\\"delay\\\": 100,\" +\r\n        \"\\\"hide_table\\\": true}'>\" +\r\n        \"</ccm-parkhaus-10-2-3>\";\r\n\r\n    const columns = [\r\n        { field: \"nr\", headerName: \"Nr\", width: 100 }\r\n    ];\r\n\r\n    const rows = [];\r\n\r\n    const [diagramError, setDiagramError] = React.useState(false);\r\n    const [diagramResult, setDiagramResult] = React.useState();\r\n\r\n    const [cmdError, setCmdError] = React.useState(false);\r\n    const [cmdResult, setCmdResult] = React.useState(\"Klicke einen Button an\");\r\n\r\n    const getCmd = (text, cmd, isDiagram) => {\r\n        axios.get(`./api/?cmd=${cmd}`).then((response) => {\r\n            if (isDiagram) {\r\n                setDiagramError(false);\r\n                setDiagramResult(response.data);\r\n            } else {\r\n                setCmdError(false);\r\n                setCmdResult(`${text}: ${response.data}`);\r\n            }\r\n        }).catch(() => {\r\n            if (isDiagram) {\r\n                /*setDiagramError(true);\r\n                setDiagramResult(`${text}: Fehler!`);*/\r\n                setDiagramError(false);\r\n                setDiagramResult({ \"data\": [{ \"x\": [\"07-01 02:01:48:912\", \"07-01 02:01:49:614\", \"07-01 02:01:50:21\", \"07-01 02:01:50:620\", \"07-01 02:01:50:821\", \"07-01 02:01:52:17\", \"07-01 02:01:52:214\", \"07-01 02:01:52:427\", \"07-01 02:01:52:614\", \"07-01 02:01:52:820\", \"07-01 02:02:15:725\", \"07-01 02:02:16:943\", \"07-01 02:02:17:316\", \"07-01 02:02:17:534\", \"07-01 02:02:18:120\", \"07-01 02:02:31:401\"], \"y\": [\"207.0\", \"400.0\", \"800.0\", \"800.0\", \"759.4\", \"698.6666666666666\", \"855.4285714285714\", \"923.5\", \"909.6666666666666\", \"1345.1\", \"3614.4545454545455\", \"3396.25\", \"3396.25\", \"3396.25\", \"3166.5384615384614\", \"3902.6428571428573\"], \"type\": \"line\", \"name\": \"Durchschnittl. Parkdauer der Abonnenten\" }], \"layout\": { \"title\": { \"text\": \"Durschnittliche Parkdauer der Abonnenten\" }, \"xaxis\": { \"title\": { \"text\": \"Zeitpunkt der Messung\" } }, \"yaxis\": { \"title\": { \"text\": \"Parkdauer (in ms)\" } } } });\r\n            } else {\r\n                setCmdError(true);\r\n                setCmdResult(`${text}: Fehler!`);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid\r\n                className={classes.parkhausContainer}\r\n                item\r\n                dangerouslySetInnerHTML={{ __html: parkhaus }}\r\n            />\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item>\r\n                        <Typography\r\n                            color={cmdError ? \"error\" : \"inherit\"}\r\n                            variant=\"h6\"\r\n                        >\r\n                            {cmdResult}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                        >\r\n                            {cmdButtons.map((btn, index) => {\r\n                                return (\r\n                                    <Grid key={`cmdButton-${index}`} item>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={() => getCmd(btn[0], btn[1], false)}\r\n                                        >{btn[0]}</Button>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item>\r\n                        {diagramError && (\r\n                            <Typography\r\n                                color=\"error\"\r\n                                variant=\"h6\"\r\n                            >\r\n                                {diagramResult}\r\n                            </Typography>\r\n                        )}\r\n                        <PlotComponent\r\n                            data={diagramResult.data}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                        >\r\n                            {diagramButtons.map((btn, index) => {\r\n                                return (\r\n                                    <Grid key={`diagramButton-${index}`} item>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={() => getCmd(btn[0], btn[1], true)}\r\n                                        >{btn[0]}</Button>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid className={classes.tableContainer} item>\r\n                <DataGrid rows={rows} columns={columns} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Container, createMuiTheme, CssBaseline, makeStyles, Paper, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\r\nimport Home from \"./Home\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst App = () => {\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n    const theme = React.useMemo(\r\n        () => createMuiTheme({\r\n            palette: {\r\n                //type: prefersDarkMode ? \"dark\" : \"light\"\r\n                type: \"light\"\r\n            }\r\n        }),\r\n        [prefersDarkMode]\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Container>\r\n                <Paper className={classes.root} elevation={3}>\r\n                    <Container>\r\n                        <Home />\r\n                    </Container>\r\n                </Paper>\r\n            </Container>\r\n        </ThemeProvider >\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}