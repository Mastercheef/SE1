{"version":3,"sources":["PlotComponent.js","Home.js","ResetButton.js","Investor.js","Manager.js","App.js","index.js"],"names":["PlotComponent","plotComponentFactory","Plotly","moment","locale","useStyles","makeStyles","theme","parkhausContainer","width","dividerContainer","marginTop","spacing","marginBottom","tableContainer","height","cmdButtons","diagramButtons","momentTimeFormat","momentDurationFormat","Home","classes","React","useState","diagramError","setDiagramError","diagramResult","setDiagramResult","cmdError","setCmdError","cmdResult","setCmdResult","rows","setRows","tableLoading","setTableLoading","parkhausPost","request","id","params","split","axios","get","then","response","windowRows","newRows","window","concat","length","nr","data","arrival","format","departure","duration","utc","asMilliseconds","licensePlate","vehicleType","customerType","price","toFixed","ticketId","useEffect","setTimeout","forEach","ticket","index","push","getCmd","text","cmd","unit","isDiagram","catch","Grid","container","direction","justify","alignItems","className","item","dangerouslySetInnerHTML","__html","Divider","variant","Typography","color","map","btn","Button","onClick","layout","disableColumnMenu","disableSelectionOnClick","loading","pageSize","rowsPerPageOptions","localeText","deDE","props","MuiDataGrid","columns","field","headerName","fab","position","bottom","right","margin","ResetButton","useTheme","transitionDuration","enter","transitions","enteringScreen","exit","leavingScreen","showResetButton","setShowResetButton","showConfirmation","setShowConfirmation","handleClick","location","reload","Zoom","in","timeout","style","transitionDelay","Fab","size","Delete","Investor","investment","setInvestment","share","setShare","costPerCar","setCostPerCar","roi","setRoi","amortisationMonths","setAmortisationMonths","amortisationYears","setAmortisationYears","xs","sm","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","label","endAdornment","InputAdornment","labelWidth","onChange","event","target","value","test","align","parseFloat","post","months","years","red","palette","error","main","green","success","Manager","turnover","setTurnover","taxes","setTaxes","turnoverAfterTax","setTurnoverAfterTax","cost","setCost","profit","setProfit","breakpoints","up","maxWidth","paper","padding","sameHeight","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","type","secondary","ThemeProvider","CssBaseline","Container","justifyContent","Paper","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1455da2.chunk.js","sourcesContent":["import plotComponentFactory from \"react-plotly.js/factory\";\r\nimport Plotly from \"plotly.js-dist\";\r\n\r\nconst PlotComponent = plotComponentFactory(Plotly);\r\n\r\nexport default PlotComponent;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { DataGrid, deDE } from \"@material-ui/data-grid\";\r\nimport PlotComponent from \"./PlotComponent\";\r\nimport moment from \"moment\";\r\n\r\nmoment.locale(\"de\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    parkhausContainer: {\r\n        width: \"100%\"\r\n    },\r\n    dividerContainer: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        width: \"100%\"\r\n    },\r\n    tableContainer: {\r\n        height: \"650px\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst cmdButtons = [\r\n    [\"Summe\", \"Summe\", \"€\"],\r\n    [\"Ø Ticketpreis\", \"Durchschnitt\", \"€\"],\r\n    [\"Gedruckte Tickets\", \"habenVerlassen\"],\r\n    [\"Aktuelle Auslastung\", \"Auslastung\"]\r\n];\r\n\r\nconst diagramButtons = [\r\n    [\"Tickets\", \"Diagramm\"],\r\n    [\"Fahrzeugtypen\", \"FahrzeugtypenDiagramm\"],\r\n    [\"Auslastung\", \"AuslastungDiagramm\"],\r\n    [\"Kundentypen\", \"KundentypenDiagramm\"],\r\n    [\"Ø Parkdauer Abonnenten\", \"AboParkdauerDiagramm\"]\r\n];\r\n\r\nconst momentTimeFormat = \"DD.MM.YY HH:mm:ss\";\r\nconst momentDurationFormat = \"HH:mm:ss\";\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n\r\n    const columns = [\r\n        { field: \"nr\", headerName: \"Nr\", width: 75 },\r\n        { field: \"arrival\", headerName: \"Ankunft\", width: 200 },\r\n        { field: \"departure\", headerName: \"Abfahrt\", width: 200 },\r\n        { field: \"duration\", headerName: \"Dauer\", width: 100 },\r\n        { field: \"licensePlate\", headerName: \"Kennzeichen\", width: 140 },\r\n        { field: \"vehicleType\", headerName: \"Fahrzeugtyp\", width: 140 },\r\n        { field: \"customerType\", headerName: \"Kundentyp\", width: 130 },\r\n        { field: \"price\", headerName: \"Preis\", width: 90 },\r\n        { field: \"ticketId\", headerName: \"Ticket ID\", width: 300 }\r\n    ];\r\n\r\n    const [diagramError, setDiagramError] = React.useState(false);\r\n    const [diagramResult, setDiagramResult] = React.useState();\r\n\r\n    const [cmdError, setCmdError] = React.useState(false);\r\n    const [cmdResult, setCmdResult] = React.useState(\"Klicke einen Button an\");\r\n\r\n    const [rows, setRows] = React.useState([]);\r\n\r\n    const [tableLoading, setTableLoading] = React.useState(true);\r\n\r\n    const updateRows = (id) => {\r\n        axios.get(`./api/?cmd=ticket&id=${id}`).then((response) => {\r\n            let windowRows;\r\n            if (window.rows) {\r\n                windowRows = window.rows;\r\n            } else {\r\n                windowRows = [];\r\n            }\r\n            const newRows = windowRows.concat({\r\n                id: windowRows.length + 1,\r\n                nr: response.data.nr,\r\n                arrival: moment(response.data.arrival).format(momentTimeFormat),\r\n                departure: moment(response.data.departure).format(momentTimeFormat),\r\n                duration: moment.utc(moment.duration(response.data.duration).asMilliseconds()).format(momentDurationFormat),\r\n                licensePlate: response.data.licensePlate,\r\n                vehicleType: response.data.vehicleType,\r\n                customerType: response.data.customerType,\r\n                price: `${response.data.price.toFixed(2)} €`,\r\n                ticketId: response.data.ticketId\r\n            });\r\n            window.rows = newRows;\r\n            setRows(newRows);\r\n        });\r\n    };\r\n\r\n    const fetchAllRows = () => {\r\n        setTimeout(() => {\r\n            axios.get(\"./api/?cmd=allTickets\").then((response) => {\r\n                const newRows = [];\r\n                response.data.forEach((ticket, index) => {\r\n                    newRows.push({\r\n                        id: index + 1,\r\n                        nr: ticket.nr,\r\n                        arrival: moment(ticket.arrival).format(momentTimeFormat),\r\n                        departure: moment(ticket.departure).format(momentTimeFormat),\r\n                        duration: moment.utc(moment.duration(ticket.duration).asMilliseconds()).format(momentDurationFormat),\r\n                        licensePlate: ticket.licensePlate,\r\n                        vehicleType: ticket.vehicleType,\r\n                        customerType: ticket.customerType,\r\n                        price: `${ticket.price} €`,\r\n                        ticketId: ticket.ticketId\r\n                    });\r\n                });\r\n                window.rows = newRows;\r\n                setRows(newRows);\r\n                setTableLoading(false);\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const parkhausPost = (request) => {\r\n        const params = request.split(\",\");\r\n        if (params[0] === \"leave\") {\r\n            updateRows(params[5]);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.parkhausPost = parkhausPost;\r\n        fetchAllRows();\r\n    }, []);\r\n\r\n    const parkhaus = \"<ccm-parkhaus-10-5-0 \" +\r\n        \"key='{\\\"name\\\":\\\"CarHome\\\",\" +\r\n        \"\\\"server_url\\\":\\\"./api/\\\",\" +\r\n        \"\\\"client_categories\\\":[\\\"Standard\\\",\\\"Abonnent\\\", \\\"Senior\\\", \\\"Student\\\", \\\"Familie\\\"],\" +\r\n        \"\\\"vehicle_types\\\":[\\\"Limousine\\\", \\\"Kombi\\\", \\\"SUV\\\"],\" +\r\n        \"\\\"delay\\\": 200,\" +\r\n        \"\\\"hide_table\\\": true,\" +\r\n        \"\\\"price_factor\\\": 0.15,\" +\r\n        \"\\\"simulation_speed\\\": 2700,\" +\r\n        \"\\\"css\\\": [\\\"ccm.load\\\",\\\"./css/parkhaus.css\\\"],\" +\r\n        \"\\\"images\\\":{\" +\r\n        \"\\\"car\\\":\\\"./img/car.png\\\",\" +\r\n        \"\\\"parking_garage\\\":\\\"./img/parkhaus.png\\\",\" +\r\n        \"\\\"empty\\\":\\\"./img/space.png\\\"\" +\r\n        \"}}'>\" +\r\n        \"</ccm-parkhaus-10-5-0>\";\r\n\r\n    const getCmd = (text, cmd, unit, isDiagram) => {\r\n        axios.get(`./api/?cmd=${cmd}`).then((response) => {\r\n            if (isDiagram) {\r\n                setDiagramError(false);\r\n                setDiagramResult(response.data);\r\n            } else {\r\n                setCmdError(false);\r\n                if (unit) {\r\n                    setCmdResult(`${text}: ${response.data.toFixed(2)} ${unit}`);\r\n                } else {\r\n                    setCmdResult(`${text}: ${response.data}`);\r\n                }\r\n            }\r\n        }).catch(() => {\r\n            if (isDiagram) {\r\n                setDiagramError(true);\r\n                setDiagramResult(`${text}: Fehler!`);\r\n            } else {\r\n                setCmdError(true);\r\n                setCmdResult(`${text}: Fehler!`);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid\r\n                className={classes.parkhausContainer}\r\n                item\r\n                dangerouslySetInnerHTML={{ __html: parkhaus }}\r\n            />\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item>\r\n                        <Typography\r\n                            color={cmdError ? \"error\" : \"inherit\"}\r\n                            variant=\"h6\"\r\n                        >\r\n                            {cmdResult}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                        >\r\n                            {cmdButtons.map((btn, index) => {\r\n                                return (\r\n                                    <Grid key={`cmdButton-${index}`} item>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={() => getCmd(btn[0], btn[1], btn[2], false)}\r\n                                        >{btn[0]}</Button>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item>\r\n                        {diagramError && (\r\n                            <Typography\r\n                                color=\"error\"\r\n                                variant=\"h6\"\r\n                            >\r\n                                {diagramResult}\r\n                            </Typography>\r\n                        )}\r\n                        {(!diagramError && diagramResult) && (\r\n                            <PlotComponent\r\n                                data={diagramResult.data}\r\n                                layout={diagramResult.layout}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                        >\r\n                            {diagramButtons.map((btn, index) => {\r\n                                return (\r\n                                    <Grid key={`diagramButton-${index}`} item>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={() => getCmd(btn[0], btn[1], null, true)}\r\n                                        >{btn[0]}</Button>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.dividerContainer} item>\r\n                <Divider variant=\"fullWidth\" />\r\n            </Grid>\r\n            <Grid className={classes.tableContainer} item>\r\n                <DataGrid\r\n                    disableColumnMenu={true}\r\n                    disableSelectionOnClick={true}\r\n                    loading={tableLoading}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    localeText={deDE.props.MuiDataGrid.localeText}\r\n                    rows={rows}\r\n                    columns={columns}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Fab, makeStyles, useTheme, Zoom } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        margin: theme.spacing(1),\r\n        width: \"120px\"\r\n    }\r\n}));\r\n\r\nconst ResetButton = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const transitionDuration = {\r\n        enter: theme.transitions.duration.enteringScreen,\r\n        exit: theme.transitions.duration.leavingScreen\r\n    };\r\n\r\n    const [showResetButton, setShowResetButton] = React.useState(true);\r\n    const [showConfirmation, setShowConfirmation] = React.useState(false);\r\n\r\n    const sendReset = () => {\r\n        axios.get(\"./api/?cmd=reset\").then(() => {\r\n            window.location.reload();\r\n        });\r\n    };\r\n\r\n    const handleClick = () => {\r\n        if (showResetButton) {\r\n            setShowResetButton(false);\r\n            setShowConfirmation(true);\r\n            setTimeout(() => {\r\n                setShowConfirmation(false);\r\n                setShowResetButton(true);\r\n            }, 5000);\r\n        } else {\r\n            sendReset();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Zoom\r\n                in={showResetButton}\r\n                timeout={transitionDuration}\r\n                style={{\r\n                    transitionDelay: `${showResetButton ? transitionDuration.exit : 0}ms`\r\n                }}\r\n            >\r\n                <Fab\r\n                    className={classes.fab}\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    variant=\"extended\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <Delete /> Reset\r\n                </Fab>\r\n            </Zoom>\r\n            <Zoom\r\n                in={showConfirmation}\r\n                timeout={transitionDuration}\r\n                style={{\r\n                    transitionDelay: `${showConfirmation ? transitionDuration.exit : 0}ms`\r\n                }}\r\n            >\r\n                <Fab\r\n                    className={classes.fab}\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    variant=\"extended\"\r\n                    onClick={handleClick}\r\n                >\r\n                    Sicher?\r\n                </Fab>\r\n            </Zoom>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetButton;","import React from \"react\";\r\nimport { Button, FormControl, Grid, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst Investor = () => {\r\n    const [investment, setInvestment] = React.useState(\"\");\r\n    const [share, setShare] = React.useState(\"\");\r\n    const [costPerCar, setCostPerCar] = React.useState(\"\");\r\n\r\n    const [roi, setRoi] = React.useState(\"?\");\r\n    const [amortisationMonths, setAmortisationMonths] = React.useState(\"?\");\r\n    const [amortisationYears, setAmortisationYears] = React.useState(\"?\");\r\n\r\n    const handleInvestementInput = (event) => {\r\n        if (event.target.value === \"\" || /^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(event.target.value)) {\r\n            setInvestment(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleCostInput = (event) => {\r\n        if (event.target.value === \"\" || /^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(event.target.value)) {\r\n            setCostPerCar(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleShareInput = (event) => {\r\n        if (event.target.value === \"\" || (/^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(event.target.value) && parseFloat(event.target.value) <= 100)) {\r\n            setShare(event.target.value);\r\n        }\r\n    }\r\n\r\n    const getCalculation = () => {\r\n        if (investment !== \"\" && share !== \"\" && costPerCar !== \"\") {\r\n            axios.post(\"./api/\", `roi,${investment},${share/100},${costPerCar}`).then((response) => {\r\n                setRoi(response.data.roi);\r\n                setAmortisationMonths(response.data.months);\r\n                setAmortisationYears(response.data.years);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n        >\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h3\">ROI-Rechner</Typography>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"investment-input\">Investment</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"investment-input\"\r\n                        label=\"Investment\"\r\n                        endAdornment={<InputAdornment position=\"end\">€</InputAdornment>}\r\n                        labelWidth={70}\r\n                        fullWidth\r\n                        onChange={handleInvestementInput}\r\n                        value={investment}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <Typography align=\"right\" variant=\"h6\">ROI / Jahr: {roi}%</Typography>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"share-input\">Gewinnbeteiligung</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"share-input\"\r\n                        label=\"Gewinnbeteiligung\"\r\n                        endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n                        labelWidth={70}\r\n                        fullWidth\r\n                        onChange={handleShareInput}\r\n                        value={share}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <Typography align=\"right\" variant=\"h6\">Amortisation (in Monaten): {amortisationMonths}</Typography>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"cost-input\">Kosten pro Fahrzeug</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"cost-input\"\r\n                        label=\"Kosten pro Fahrzeug\"\r\n                        endAdornment={<InputAdornment position=\"end\">€</InputAdornment>}\r\n                        labelWidth={70}\r\n                        fullWidth\r\n                        onChange={handleCostInput}\r\n                        value={costPerCar}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <Typography align=\"right\" variant=\"h6\">Amortisation (in Jahren): {amortisationYears}</Typography>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={getCalculation}\r\n                >\r\n                    Errechnen\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Investor;","import React from \"react\";\r\nimport { Button, FormControl, Grid, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    red: {\r\n        color: theme.palette.error.main\r\n    },\r\n    green: {\r\n        color: theme.palette.success.main\r\n    }\r\n}));\r\n\r\nconst Manager = () => {\r\n    const classes = useStyles();\r\n\r\n    const [costPerCar, setCostPerCar] = React.useState(\"\");\r\n\r\n    const [turnover, setTurnover] = React.useState(\"?\");\r\n    const [taxes, setTaxes] = React.useState(\"?\");\r\n    const [turnoverAfterTax, setTurnoverAfterTax] = React.useState(\"?\");\r\n    const [cost, setCost] = React.useState(\"?\");\r\n    const [profit, setProfit] = React.useState(\"?\");\r\n\r\n    const handleCostInput = (event) => {\r\n        if (event.target.value === \"\" || /^[0-9]+\\.{0,1}[0-9]{0,2}$/.test(event.target.value)) {\r\n            setCostPerCar(event.target.value);\r\n        }\r\n    }\r\n\r\n    const getCalculation = () => {\r\n        if (costPerCar !== \"\") {\r\n            axios.post(\"./api/\", `incomestatement,${costPerCar}`).then((response) => {\r\n                setTurnover(response.data.turnover);\r\n                setTaxes(response.data.taxes);\r\n                setTurnoverAfterTax(response.data.turnoverAfterTax);\r\n                setCost(response.data.cost);\r\n                setProfit(response.data.profit);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n        >\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h3\">GuV-Rechnung</Typography>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"cost-input\">Kosten pro Fahrzeug</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"cost-input\"\r\n                        label=\"Kosten pro Fahrzeug\"\r\n                        endAdornment={<InputAdornment position=\"end\">€</InputAdornment>}\r\n                        labelWidth={70}\r\n                        fullWidth\r\n                        onChange={handleCostInput}\r\n                        value={costPerCar}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6} />\r\n            <Grid item sm={12}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={getCalculation}\r\n                >\r\n                    Errechnen\r\n                </Button>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Typography variant=\"h6\">Umsatz: {turnover} €</Typography>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Typography className={classes.red} variant=\"h6\">Steuern: {taxes} €</Typography>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Typography variant=\"h6\">Rest: {turnoverAfterTax} €</Typography>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Typography className={classes.red} variant=\"h6\">Kosten: {cost} €</Typography>\r\n            </Grid>\r\n            <Grid item sm={12}>\r\n                <Typography className={classes.green} variant=\"h6\">Profit: {profit} €</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Manager;","import React from \"react\";\r\nimport { Container, createMuiTheme, CssBaseline, Grid, makeStyles, Paper, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\r\nimport Home from \"./Home\";\r\nimport ResetButton from \"./ResetButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Investor from \"./Investor\";\r\nimport Manager from \"./Manager\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            maxWidth: \"1450px\"\r\n        },\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    sameHeight: {\r\n        height: \"470px\",\r\n        padding: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst App = () => {\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n    const theme = React.useMemo(\r\n        () => createMuiTheme({\r\n            palette: {\r\n                type: prefersDarkMode ? \"dark\" : \"light\",\r\n                secondary: {\r\n                    main: red[\"800\"]\r\n                }\r\n            }\r\n        }),\r\n        [prefersDarkMode]\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Container className={classes.container}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item sm={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Home />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item sm={12} md={6}>\r\n                        <Paper className={classes.sameHeight}>\r\n                            <Investor />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item sm={12} md={6}>\r\n                        <Paper className={classes.sameHeight}>\r\n                            <Manager />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <ResetButton />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}