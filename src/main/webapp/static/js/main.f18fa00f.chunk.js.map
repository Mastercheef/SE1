{"version":3,"sources":["PlotComponent.js","Home.js","ResetButton.js","App.js","index.js"],"names":["PlotComponent","plotComponentFactory","Plotly","moment","locale","useStyles","makeStyles","theme","parkhausContainer","width","dividerContainer","marginTop","spacing","marginBottom","tableContainer","height","cmdButtons","diagramButtons","momentTimeFormat","momentDurationFormat","Home","classes","React","useState","diagramError","setDiagramError","diagramResult","setDiagramResult","cmdError","setCmdError","cmdResult","setCmdResult","rows","setRows","tableLoading","setTableLoading","parkhausPost","request","id","params","split","axios","get","then","response","windowRows","newRows","window","concat","length","nr","data","arrival","format","departure","duration","utc","asMilliseconds","licensePlate","vehicleType","customerType","price","toFixed","ticketId","useEffect","setTimeout","forEach","ticket","index","push","getCmd","text","cmd","unit","isDiagram","catch","Grid","container","direction","justify","alignItems","className","item","dangerouslySetInnerHTML","__html","Divider","variant","Typography","color","map","btn","Button","onClick","layout","disableColumnMenu","disableSelectionOnClick","loading","pageSize","rowsPerPageOptions","localeText","deDE","props","MuiDataGrid","columns","field","headerName","fab","position","bottom","right","margin","ResetButton","useTheme","transitionDuration","enter","transitions","enteringScreen","exit","leavingScreen","showResetButton","setShowResetButton","showConfirmation","setShowConfirmation","handleClick","location","reload","Zoom","in","timeout","style","transitionDelay","Fab","size","Delete","breakpoints","up","maxWidth","homePaper","paddingTop","paddingBottom","minWidth","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","type","secondary","main","red","ThemeProvider","CssBaseline","Container","Paper","elevation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f18fa00f.chunk.js","sourcesContent":["import plotComponentFactory from \"react-plotly.js/factory\";\nimport Plotly from \"plotly.js-dist\";\n\nconst PlotComponent = plotComponentFactory(Plotly);\n\nexport default PlotComponent;","import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { DataGrid, deDE } from \"@material-ui/data-grid\";\nimport PlotComponent from \"./PlotComponent\";\nimport moment from \"moment\";\n\nmoment.locale(\"de\");\n\nconst useStyles = makeStyles((theme) => ({\n    parkhausContainer: {\n        width: \"100%\"\n    },\n    dividerContainer: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        width: \"100%\"\n    },\n    tableContainer: {\n        height: \"650px\",\n        width: \"100%\"\n    }\n}));\n\nconst cmdButtons = [\n    [\"Summe\", \"Summe\", \"€\"],\n    [\"Ø Ticketpreis\", \"Durchschnitt\", \"€\"],\n    [\"Gedruckte Tickets\", \"habenVerlassen\"],\n    [\"Aktuelle Auslastung\", \"Auslastung\"]\n];\n\nconst diagramButtons = [\n    [\"Tickets\", \"Diagramm\"],\n    [\"Fahrzeugtypen\", \"FahrzeugtypenDiagramm\"],\n    [\"Auslastung\", \"AuslastungDiagramm\"],\n    [\"Kundentypen\", \"KundentypenDiagramm\"],\n    [\"Ø Parkdauer Abonnenten\", \"AboParkdauerDiagramm\"]\n];\n\nconst momentTimeFormat = \"DD.MM.YY HH:mm:ss\";\nconst momentDurationFormat = \"HH:mm:ss\";\n\nconst Home = () => {\n    const classes = useStyles();\n\n    const columns = [\n        { field: \"nr\", headerName: \"Nr\", width: 75 },\n        { field: \"arrival\", headerName: \"Ankunft\", width: 200 },\n        { field: \"departure\", headerName: \"Abfahrt\", width: 200 },\n        { field: \"duration\", headerName: \"Dauer\", width: 100 },\n        { field: \"licensePlate\", headerName: \"Kennzeichen\", width: 140 },\n        { field: \"vehicleType\", headerName: \"Fahrzeugtyp\", width: 140 },\n        { field: \"customerType\", headerName: \"Kundentyp\", width: 130 },\n        { field: \"price\", headerName: \"Preis\", width: 90 },\n        { field: \"ticketId\", headerName: \"Ticket ID\", width: 300 }\n    ];\n\n    const [diagramError, setDiagramError] = React.useState(false);\n    const [diagramResult, setDiagramResult] = React.useState();\n\n    const [cmdError, setCmdError] = React.useState(false);\n    const [cmdResult, setCmdResult] = React.useState(\"Klicke einen Button an\");\n\n    const [rows, setRows] = React.useState([]);\n\n    const [tableLoading, setTableLoading] = React.useState(true);\n\n    const updateRows = (id) => {\n        axios.get(`./api/?cmd=ticket&id=${id}`).then((response) => {\n            let windowRows;\n            if (window.rows) {\n                windowRows = window.rows;\n            } else {\n                windowRows = [];\n            }\n            const newRows = windowRows.concat({\n                id: windowRows.length + 1,\n                nr: response.data.nr,\n                arrival: moment(response.data.arrival).format(momentTimeFormat),\n                departure: moment(response.data.departure).format(momentTimeFormat),\n                duration: moment.utc(moment.duration(response.data.duration).asMilliseconds()).format(momentDurationFormat),\n                licensePlate: response.data.licensePlate,\n                vehicleType: response.data.vehicleType,\n                customerType: response.data.customerType,\n                price: `${response.data.price.toFixed(2)} €`,\n                ticketId: response.data.ticketId\n            });\n            window.rows = newRows;\n            setRows(newRows);\n        });\n    };\n\n    const fetchAllRows = () => {\n        setTimeout(() => {\n            axios.get(\"./api/?cmd=allTickets\").then((response) => {\n                const newRows = [];\n                response.data.forEach((ticket, index) => {\n                    newRows.push({\n                        id: index + 1,\n                        nr: ticket.nr,\n                        arrival: moment(ticket.arrival).format(momentTimeFormat),\n                        departure: moment(ticket.departure).format(momentTimeFormat),\n                        duration: moment.utc(moment.duration(ticket.duration).asMilliseconds()).format(momentDurationFormat),\n                        licensePlate: ticket.licensePlate,\n                        vehicleType: ticket.vehicleType,\n                        customerType: ticket.customerType,\n                        price: `${ticket.price} €`,\n                        ticketId: ticket.ticketId\n                    });\n                });\n                window.rows = newRows;\n                setRows(newRows);\n                setTableLoading(false);\n            });\n        }, 1000);\n    };\n\n    const parkhausPost = (request) => {\n        const params = request.split(\",\");\n        if (params[0] === \"leave\") {\n            updateRows(params[5]);\n        }\n    };\n\n    React.useEffect(() => {\n        window.parkhausPost = parkhausPost;\n        fetchAllRows();\n    }, []);\n\n    const parkhaus = \"<ccm-parkhaus-10-5-0 \" +\n        \"key='{\\\"name\\\":\\\"CarHome\\\",\" +\n        \"\\\"server_url\\\":\\\"./api/\\\",\" +\n        \"\\\"client_categories\\\":[\\\"Standard\\\",\\\"Abonnent\\\", \\\"Senior\\\", \\\"Student\\\", \\\"Familie\\\"],\" +\n        \"\\\"vehicle_types\\\":[\\\"Limousine\\\", \\\"Kombi\\\", \\\"SUV\\\"],\" +\n        \"\\\"delay\\\": 200,\" +\n        \"\\\"hide_table\\\": true,\" +\n        \"\\\"price_factor\\\": 0.15,\" +\n        \"\\\"simulation_speed\\\": 2700,\" +\n        \"\\\"css\\\": [\\\"ccm.load\\\",\\\"./css/parkhaus.css\\\"],\" +\n        \"\\\"images\\\":{\" +\n        \"\\\"car\\\":\\\"./img/car.png\\\",\" +\n        \"\\\"parking_garage\\\":\\\"./img/parkhaus.png\\\",\" +\n        \"\\\"empty\\\":\\\"./img/space.png\\\"\" +\n        \"}}'>\" +\n        \"</ccm-parkhaus-10-5-0>\";\n\n    const getCmd = (text, cmd, unit, isDiagram) => {\n        axios.get(`./api/?cmd=${cmd}`).then((response) => {\n            if (isDiagram) {\n                setDiagramError(false);\n                setDiagramResult(response.data);\n            } else {\n                setCmdError(false);\n                if (unit) {\n                    setCmdResult(`${text}: ${response.data} ${unit}`);\n                } else {\n                    setCmdResult(`${text}: ${response.data}`);\n                }\n            }\n        }).catch(() => {\n            if (isDiagram) {\n                setDiagramError(true);\n                setDiagramResult(`${text}: Fehler!`);\n            } else {\n                setCmdError(true);\n                setCmdResult(`${text}: Fehler!`);\n            }\n        });\n    };\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid\n                className={classes.parkhausContainer}\n                item\n                dangerouslySetInnerHTML={{ __html: parkhaus }}\n            />\n            <Grid className={classes.dividerContainer} item>\n                <Divider variant=\"fullWidth\" />\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color={cmdError ? \"error\" : \"inherit\"}\n                            variant=\"h6\"\n                        >\n                            {cmdResult}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            spacing={3}\n                        >\n                            {cmdButtons.map((btn, index) => {\n                                return (\n                                    <Grid key={`cmdButton-${index}`} item>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={() => getCmd(btn[0], btn[1], btn[2], false)}\n                                        >{btn[0]}</Button>\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid className={classes.dividerContainer} item>\n                <Divider variant=\"fullWidth\" />\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        {diagramError && (\n                            <Typography\n                                color=\"error\"\n                                variant=\"h6\"\n                            >\n                                {diagramResult}\n                            </Typography>\n                        )}\n                        {(!diagramError && diagramResult) && (\n                            <PlotComponent\n                                data={diagramResult.data}\n                                layout={diagramResult.layout}\n                            />\n                        )}\n                    </Grid>\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            spacing={3}\n                        >\n                            {diagramButtons.map((btn, index) => {\n                                return (\n                                    <Grid key={`diagramButton-${index}`} item>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={() => getCmd(btn[0], btn[1], null, true)}\n                                        >{btn[0]}</Button>\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid className={classes.dividerContainer} item>\n                <Divider variant=\"fullWidth\" />\n            </Grid>\n            <Grid className={classes.tableContainer} item>\n                <DataGrid\n                    disableColumnMenu={true}\n                    disableSelectionOnClick={true}\n                    loading={tableLoading}\n                    pageSize={10}\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    localeText={deDE.props.MuiDataGrid.localeText}\n                    rows={rows}\n                    columns={columns}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport { Fab, makeStyles, useTheme, Zoom } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        position: \"fixed\",\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n        margin: theme.spacing(1),\n        width: \"120px\"\n    }\n}));\n\nconst ResetButton = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const transitionDuration = {\n        enter: theme.transitions.duration.enteringScreen,\n        exit: theme.transitions.duration.leavingScreen\n    };\n\n    const [showResetButton, setShowResetButton] = React.useState(true);\n    const [showConfirmation, setShowConfirmation] = React.useState(false);\n\n    const sendReset = () => {\n        axios.get(\"./api/?cmd=reset\").then(() => {\n            window.location.reload();\n        });\n    };\n\n    const handleClick = () => {\n        if (showResetButton) {\n            setShowResetButton(false);\n            setShowConfirmation(true);\n            setTimeout(() => {\n                setShowConfirmation(false);\n                setShowResetButton(true);\n            }, 5000);\n        } else {\n            sendReset();\n        }\n    };\n\n\n    return (\n        <div>\n            <Zoom\n                in={showResetButton}\n                timeout={transitionDuration}\n                style={{\n                    transitionDelay: `${showResetButton ? transitionDuration.exit : 0}ms`\n                }}\n            >\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    size=\"large\"\n                    variant=\"extended\"\n                    onClick={handleClick}\n                >\n                    <Delete /> Reset\n                </Fab>\n            </Zoom>\n            <Zoom\n                in={showConfirmation}\n                timeout={transitionDuration}\n                style={{\n                    transitionDelay: `${showConfirmation ? transitionDuration.exit : 0}ms`\n                }}\n            >\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    size=\"large\"\n                    variant=\"extended\"\n                    onClick={handleClick}\n                >\n                    Sicher?\n                </Fab>\n            </Zoom>\n        </div>\n    );\n};\n\nexport default ResetButton;","import React from \"react\";\nimport { Container, createMuiTheme, CssBaseline, makeStyles, Paper, ThemeProvider, useMediaQuery } from \"@material-ui/core\";\nimport Home from \"./Home\";\nimport ResetButton from \"./ResetButton\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        [theme.breakpoints.up(\"md\")]: {\n            maxWidth: \"90%\"\n        }\n    },\n    homePaper: {\n        margin: theme.spacing(3),\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        minWidth: \"1000px\"\n    }\n}));\n\nconst App = () => {\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(\n        () => createMuiTheme({\n            palette: {\n                type: prefersDarkMode ? \"dark\" : \"light\",\n                secondary: {\n                    main: red[\"800\"]\n                }\n            }\n        }),\n        [prefersDarkMode]\n    );\n\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Container className={classes.container}>\n                <Paper className={classes.homePaper} elevation={3}>\n                    <Container className={classes.container}>\n                        <Home />\n                    </Container>\n                </Paper>\n            </Container>\n            <ResetButton />\n        </ThemeProvider >\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}